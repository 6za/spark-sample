name: ci

env:
  IMAGE_PREFIX: jvm11-scala2.13-spark3.4.1-v0
  IMAGE_NAME: base-spark-scala

on:
  push:
    branches:
    - "main"
    - "master"
    tags:
    - "v*.*.*"

jobs:
  build-spark:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_NAME }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
          type=raw,value=latest
          type=raw,value=${{ env.IMAGE_PREFIX }} 
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./docker/spark-base/
        push: true
        platforms: linux/amd64,linux/arm64/v8
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_NAME }}:latest
        cache-to: type=inline
  
  build-spark-with-cassandra:
    needs: build-spark
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_NAME }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=raw,value=${{ env.IMAGE_PREFIX }}-cassandra
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./docker/spark-cassandra/
        push: true
        platforms: linux/amd64,linux/arm64/v8
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_PREFIX }}-cassandra
        cache-to: type=inline        
  
  build-spark-with-postgres:
    needs: build-spark
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_NAME }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=raw,value=${{ env.IMAGE_PREFIX }}-postgres
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./docker/spark-postgres/
        push: true
        platforms: linux/amd64,linux/arm64/v8
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_PREFIX }}-postgres
        cache-to: type=inline         
        
  build-spark-with-s3:
    needs: build-spark
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          ${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_NAME }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=raw,value=${{ env.IMAGE_PREFIX }}-s3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./docker/spark-s3/
        push: true
        platforms: linux/amd64,linux/arm64/v8
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/${{ secrets.IMAGE_NAME }}:${{ env.IMAGE_PREFIX }}-s3
        cache-to: type=inline          